/* Abstracts */
/* Typography */
/*
Breakpoints:
0    - 600px   Phone
600  - 900px   Tablet (Portrait)
900  - 1200px  Tablet (Landscape)
1200 - 1800px  Desktop, assume to be normal state

1800px +       Big desktop

breakpoint argument choices:
- phone 
- tab-port
- tab-land
- desktop (Not included, is expected to be the normal state)
- big-desktop

ORDER: Base + typography > general layout + grid > page layout > components
*/
/* Themes */
/* 
	Contains values that span over different themes.
	These variables can be overridden in the separate theme files.
*/
/* 
	This mixin transfers SASS variables to CSS-variables,
	which makes it possible to toggle the whole theme using a single class.
*/
/* Generate the light theme CSS-variables */
/* Light theme variables */
:root {
  --color-page-background: #f0f2f5;
  --color-text: #000;
  --color-heading: #2196F3;
  --color-panel: white;
  --color-button-background: #e4e6ec;
  --color-button-background-hover: #d0d2d8;
  --color-button-add-background: #2196F3;
  --color-button-add-background-hover: #4dafff;
  --color-button-add-text: white;
  --color-button-add-text-hover: white;
  --color-button-text: #1c1e21;
  --color-button-text-hover: #1c1e21;
  --color-border-separator: #ccc;
  --color-input-text-background: #e4e6ec;
  --color-input-text-background-hover: #d0d2d8;
  --color-input-text-placeholder: #999;
  --color-switch-background: #ccc;
  --color-switch-active: #2196F3;
}

/* Generate the dark theme CSS-variables */
/* Dark theme variables */
.dark {
  --color-page-background: #18191a;
  --color-text: #ccc;
  --color-heading: #F39621;
  --color-panel: #242526;
  --color-button-background: rgba(255, 255, 255, 0.1);
  --color-button-background-hover: rgba(255, 255, 255, 0.25);
  --color-button-add-background: #F39621;
  --color-button-add-background-hover: #f6ae55;
  --color-button-add-text: white;
  --color-button-add-text-hover: white;
  --color-button-text: #e4e6eb;
  --color-button-text-hover: #e4e6eb;
  --color-border-separator: #444;
  --color-input-text-background: rgba(255, 255, 255, 0.1);
  --color-input-text-background-hover: rgba(255, 255, 255, 0.25);
  --color-input-text-placeholder: #999;
  --color-switch-background: #ccc;
  --color-switch-active: #2196F3;
}

/* Base */
.animation-color {
  transition: color .3s ease-in-out, background-color .4s ease-in-out;
}

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  /* This defines what 1 rem is.
       16 px is the default font size. 
       1 rem = (R)elative to font-size of the root (E)le(M)ment
       We want 1 rem = 10 px; Thus, 10px/16px = 62.5% */
  font-size: 62.5%;
}

@media (max-width: 75em) {
  html {
    font-size: 56.25%;
  }
}

@media (max-width: 56.25em) {
  html {
    font-size: 50%;
  }
}

@media (max-width: 37.5em) {
  html {
    font-size: 30%;
  }
}

@media (min-width: 112.5em) {
  html {
    font-size: 75%;
  }
}

body {
  /* Borders and padding are added to the height */
  box-sizing: border-box;
  background-color: var(--color-page-background);
  color: var(--color-text);
  padding: 20px;
}

body {
  font-family: Arial, Helvetica, sans-serif;
  font-size: 1.6rem;
}

input, textarea, select,
h1, h2, h3, h4, h5, h6 {
  font-family: Arial, Helvetica, sans-serif;
}

h1, h2, h3, h4, h5, h6 {
  color: var(--color-heading);
}

h1 {
  font-size: 3rem;
}

h2 {
  font-size: 2rem;
}

/* Layout */
/* Pages */
/* Components */
.button {
  display: inline-block;
  border: 0;
  outline: none;
  background-color: var(--color-button-background);
  color: var(--color-button-text);
  padding: 10px 20px 10px 20px;
  font-family: Arial, Helvetica, sans-serif;
  font-size: 1.5rem;
  font-weight: bold;
  letter-spacing: 0px;
  border-radius: 5px;
  text-decoration: none;
}

.button:hover {
  background-color: var(--color-button-background-hover);
  color: var(--color-button-text-hover);
}

.button-add {
  background-color: var(--color-button-add-background);
  color: var(--color-button-add-text);
}

.button-add:hover {
  background-color: var(--color-button-add-background-hover);
  color: var(--color-button-add-text-hover);
}

.panel {
  padding: 40px;
  margin-top: 20px;
  margin-bottom: 20px;
  background-color: var(--color-panel);
  border: 0px;
  border-radius: 5px;
  box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 2px 0px;
}

/* The switch - the box around the slider */
.switch {
  position: relative;
  display: inline-block;
  width: 56px;
  height: 30px;
}

/* Hide default HTML checkbox */
.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

/* The slider */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--color-switch-background);
  -webkit-transition: .4s;
  transition: .4s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 24px;
  width: 24px;
  left: 3px;
  bottom: 3px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
}

input:checked + .slider {
  background-color: var(--color-switch-active);
}

input:focus + .slider {
  box-shadow: 0 0 1px var(--color-switch-active);
}

input:checked + .slider:before {
  transform: translateX(24px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}

input[type="text"] {
  border: none;
  background-color: var(--color-input-text-background);
  color: var(--color-input-text-color);
  border-radius: 2rem;
  padding: 1.3rem 2rem 1.3rem 2rem;
  font-size: 1.6rem;
  font-weight: normal;
}

input[type="text"]:focus {
  outline: none;
  background-color: var(--color-input-text-background-hover);
  transition: background-color .5s;
}

input[type="text"]:focus::placeholder {
  color: var(--color-input-text-placeholder);
}

input[type="text"]::placeholder {
  color: var(--color-input-text-placeholder);
}
